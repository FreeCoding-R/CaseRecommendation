<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>FreeCoding-R</groupId>
	<artifactId>CaseRecommendation</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>

	<!--<name>CaseRecommendation</name>-->
	<!--<description>Demo project for Spring Boot</description>-->

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional><!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 -->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<version>1.4.3.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.3.5.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.0</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.7</version>
		</dependency>
	</dependencies>





	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- 设置JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!--&lt;!&ndash; 设置打包jar包的信息 &ndash;&gt;-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-assembly-plugin</artifactId>-->
				<!--<version>3.0.0</version>-->
				<!--<configuration>-->
					<!--<archive>-->
						<!--<manifest>-->
							<!--<mainClass>freecoding.CaserecommendationApplication</mainClass>-->
						<!--</manifest>-->
					<!--</archive>-->
					<!--<descriptorRefs>-->
						<!--<descriptorRef>jar-with-dependencies</descriptorRef>-->
					<!--</descriptorRefs>-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>make-assembly</id>-->
						<!--<phase>package</phase>-->
						<!--<goals>-->
							<!--<goal>single</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
		</plugins>

		<!--&lt;!&ndash; 设置编译时文件输出位置 &ndash;&gt;-->
		<!--<resources>-->
			<!--<resource>-->
				<!--&lt;!&ndash; 设定主资源目录  &ndash;&gt;-->
				<!--<directory>src/main/resources</directory>-->

				<!--&lt;!&ndash; maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，只处理如下配置中包含的资源类型-->
                <!--<includes>-->
                    <!--<include>*.xml</include>-->
                <!--</includes>-->
                 <!--&ndash;&gt;-->

				<!--&lt;!&ndash; maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，不处理如下配置中包含的资源类型（剔除下如下配置中包含的资源类型）-->
                <!--<excludes>-->
                    <!--<exclude>*.xml</exclude>-->
                <!--</excludes>-->
                <!--&ndash;&gt;-->

				<!--&lt;!&ndash; maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，指定处理后的资源文件输出目录，默认是${build.outputDirectory}指定的目录-->
                <!--<targetPath>d:/</targetPath>-->
                   <!--&ndash;&gt;-->

				<!--&lt;!&ndash; maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤 &ndash;&gt;-->
				<!--<targetPath>${project.build.outputDirectory}/resources</targetPath>-->
				<!--<filtering>true</filtering>-->

			<!--</resource>-->
		<!--</resources>-->
	</build>


</project>
